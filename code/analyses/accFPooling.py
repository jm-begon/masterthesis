# -*- coding: utf-8 -*-
"""
Created on Tue May 20 17:09:02 2014

@author: Jm Begon
"""
import numpy as np
import pylab as pl
from util import plotFeatureImportance, getCumulFreq

dataNo = [ 0.0604158, 0.0679793, 0.0010920, 0.0252113, 0.0261678, 0.0195001, 0.0212257, 0.0248503, 0.0012603, 0.0203161, 0.0321155, 0.0243179, 0.0267709, 0.0219115, 0.0224332, 0.0239475, 0.0239009, 0.0351417, 0.0391873, 0.0252191, 0.0395104, 0.0299196, 0.0243899, 0.0232275, 0.0231522, 0.0234373, 0.0256795, 0.0254191, 0.0048653, 0.0238314, 0.0239269, 0.0234526, 0.0198200, 0.0266684, 0.0349557, 0.0218917, 0.0207594, 0.0214123, 0.0207167, ]
dataAvg = [ 0.0555028, 0.0584389, 0.0008324, 0.0253080, 0.0270780, 0.0185095, 0.0189799, 0.0222915, 0.0009085, 0.0205092, 0.0346033, 0.0240680, 0.0267957, 0.0241466, 0.0223773, 0.0227289, 0.0225295, 0.0374408, 0.0392690, 0.0208900, 0.0551367, 0.0321374, 0.0252969, 0.0233696, 0.0231649, 0.0228389, 0.0252244, 0.0252322, 0.0016070, 0.0250587, 0.0205282, 0.0214086, 0.0178198, 0.0306948, 0.0420674, 0.0216970, 0.0210029, 0.0213103, 0.0211962, ]
dataMin = [ 0.0780729, 0.0794170, 0.0025531, 0.0166858, 0.0202542, 0.0018019, 0.0029815, 0.0099280, 0.0029396, 0.0038383, 0.0792564, 0.0175145, 0.0217896, 0.0134124, 0.0102463, 0.0134553, 0.0133504, 0.0624434, 0.0830635, 0.0568490, 0.0810952, 0.0600435, 0.0172919, 0.0147979, 0.0138305, 0.0145787, 0.0179347, 0.0180123, 0.0000852, 0.0173545, 0.0045900, 0.0007301, 0.0000399, 0.0609022, 0.0701179, 0.0068799, 0.0031486, 0.0055010, 0.0032127, ]
dataMax = [ 0.0449504, 0.0537280, 0.0003423, 0.0293525, 0.0276406, 0.0256977, 0.0294994, 0.0243326, 0.0003868, 0.0241445, 0.0152085, 0.0284853, 0.0336930, 0.0250288, 0.0259363, 0.0245610, 0.0242729, 0.0264206, 0.0206055, 0.0107088, 0.0313814, 0.0201980, 0.0269101, 0.0264078, 0.0272878, 0.0275124, 0.0312591, 0.0323253, 0.0131692, 0.0261843, 0.0311840, 0.0120016, 0.0340019, 0.0254234, 0.0253721, 0.0307867, 0.0262357, 0.0307995, 0.0265643, ]
dataAvg357 = [ 0.0178267, 0.0191943, 0.0215201, 0.0153219, 0.0202478, 0.0217161, 0.0002477, 0.0002221, 0.0001664, 0.0077662, 0.0086754, 0.0095509, 0.0085635, 0.0093844, 0.0103097, 0.0055993, 0.0053916, 0.0049117, 0.0057778, 0.0056455, 0.0051319, 0.0067203, 0.0068241, 0.0072216, 0.0002967, 0.0002396, 0.0002095, 0.0060703, 0.0062651, 0.0065881, 0.0097411, 0.0121940, 0.0140162, 0.0075888, 0.0085685, 0.0095867, 0.0080691, 0.0094578, 0.0106835, 0.0075768, 0.0093460, 0.0108242, 0.0069333, 0.0074163, 0.0077139, 0.0068416, 0.0072446, 0.0076353, 0.0068424, 0.0073145, 0.0076382, 0.0106584, 0.0128594, 0.0161580, 0.0117343, 0.0146095, 0.0162389, 0.0062821, 0.0060446, 0.0056929, 0.0148036, 0.0171803, 0.0224332, 0.0088694, 0.0105229, 0.0120058, 0.0077916, 0.0088346, 0.0095131, 0.0072336, 0.0083695, 0.0089604, 0.0071377, 0.0080972, 0.0086739, 0.0070303, 0.0082540, 0.0084863, 0.0077996, 0.0087215, 0.0100346, 0.0078552, 0.0091240, 0.0101835, 0.0004978, 0.0001523, 0.0000544, 0.0077145, 0.0089468, 0.0098664, 0.0062717, 0.0058092, 0.0054003, 0.0061902, 0.0056168, 0.0055361, 0.0053689, 0.0044048, 0.0031118, 0.0084189, 0.0110804, 0.0136219, 0.0106837, 0.0148329, 0.0166846, 0.0066398, 0.0067785, 0.0071452, 0.0064985, 0.0074186, 0.0079527, 0.0065800, 0.0067526, 0.0070367, 0.0064916, 0.0074057, 0.0080030, ]
datanmaM =[ 0.0114920, 0.0148171, 0.0163452, 0.0137983, 0.0117267, 0.0147565, 0.0142827, 0.0150652, 0.0001975, 0.0001961, 0.0003783, 0.0001347, 0.0055777, 0.0061429, 0.0026526, 0.0109169, 0.0057627, 0.0065417, 0.0031676, 0.0100019, 0.0042264, 0.0045067, 0.0003651, 0.0087142, 0.0045282, 0.0045377, 0.0005649, 0.0110707, 0.0051339, 0.0053658, 0.0016775, 0.0099550, 0.0002251, 0.0001973, 0.0004339, 0.0001549, 0.0043672, 0.0049492, 0.0007447, 0.0083824, 0.0061266, 0.0081823, 0.0170377, 0.0053038, 0.0054247, 0.0059602, 0.0027723, 0.0103508, 0.0056987, 0.0063719, 0.0033050, 0.0128074, 0.0048260, 0.0058470, 0.0022979, 0.0086713, 0.0048352, 0.0053826, 0.0017318, 0.0098380, 0.0051072, 0.0055563, 0.0022031, 0.0089511, 0.0051292, 0.0055392, 0.0021973, 0.0088326, 0.0072475, 0.0086375, 0.0110324, 0.0092284, 0.0075287, 0.0093911, 0.0186240, 0.0069023, 0.0053419, 0.0055443, 0.0114634, 0.0034767, 0.0077690, 0.0128049, 0.0167699, 0.0113413, 0.0060777, 0.0074292, 0.0129273, 0.0077701, 0.0054286, 0.0062557, 0.0027369, 0.0095152, 0.0051123, 0.0057430, 0.0024721, 0.0094715, 0.0051234, 0.0056364, 0.0022585, 0.0098303, 0.0050951, 0.0055366, 0.0023099, 0.0097080, 0.0054513, 0.0061019, 0.0028148, 0.0115397, 0.0054795, 0.0060875, 0.0027900, 0.0108597, 0.0011045, 0.0004334, 0.0000154, 0.0037718, 0.0052504, 0.0062323, 0.0027538, 0.0091842, 0.0049720, 0.0048996, 0.0008391, 0.0105679, 0.0048245, 0.0050920, 0.0001442, 0.0049169, 0.0042058, 0.0041443, 0.0000083, 0.0137052, 0.0054914, 0.0082275, 0.0134165, 0.0103509, 0.0066082, 0.0099498, 0.0125726, 0.0092827, 0.0047078, 0.0052185, 0.0012950, 0.0122761, 0.0045269, 0.0050079, 0.0006477, 0.0095194, 0.0046859, 0.0051998, 0.0010510, 0.0120233, 0.0044900, 0.0050435, 0.0006540, 0.0096810, ]
dataMax357 = [ 0.0128581, 0.0135863, 0.0164938, 0.0167901, 0.0206239, 0.0223776, 0.0000928, 0.0000568, 0.0000560, 0.0081364, 0.0110799, 0.0131068, 0.0079595, 0.0098096, 0.0103780, 0.0069228, 0.0096038, 0.0118699, 0.0073825, 0.0105321, 0.0111966, 0.0055731, 0.0052182, 0.0035773, 0.0001050, 0.0000645, 0.0000570, 0.0065006, 0.0079896, 0.0098361, 0.0048711, 0.0030196, 0.0017772, 0.0080719, 0.0108411, 0.0142320, 0.0085555, 0.0128608, 0.0186351, 0.0072348, 0.0094524, 0.0111977, 0.0068807, 0.0090588, 0.0110378, 0.0064014, 0.0069631, 0.0062895, 0.0062862, 0.0068883, 0.0063978, 0.0077135, 0.0077590, 0.0071244, 0.0066584, 0.0049153, 0.0033831, 0.0037933, 0.0022951, 0.0014482, 0.0095907, 0.0095750, 0.0093660, 0.0057533, 0.0044036, 0.0029484, 0.0077509, 0.0099949, 0.0107056, 0.0074235, 0.0093421, 0.0108063, 0.0075341, 0.0095870, 0.0117701, 0.0074591, 0.0095745, 0.0107300, 0.0079569, 0.0111099, 0.0164263, 0.0081888, 0.0111794, 0.0155239, 0.0040153, 0.0077168, 0.0115401, 0.0074523, 0.0094080, 0.0109370, 0.0070424, 0.0088529, 0.0092293, 0.0027710, 0.0013260, 0.0004684, 0.0091212, 0.0123539, 0.0145854, 0.0070169, 0.0069134, 0.0064480, 0.0075879, 0.0069855, 0.0060637, 0.0075746, 0.0128544, 0.0172547, 0.0071652, 0.0102850, 0.0126619, 0.0085275, 0.0126945, 0.0161971, 0.0071706, 0.0104384, 0.0127627, ]


def plotFINo(data=dataNo):

    plotFeatureImportance(data, "RandConv with original image (feature 0) and custom filters\nNo pooling", None, lim=0.085, colorate=[("no pooling", "m")])


def plotFIAvg(data=dataAvg):
    plotFeatureImportance(data, "RandConv with original image (feature 0) and custom filters\n3x3 average pooling", None, lim=0.085, colorate=[("3x3 average", "b")])

def plotFIMin(data=dataMin):

    plotFeatureImportance(data, "RandConv with original image (feature 0) and custom filters\n3x3 minimum pooling", None, lim=0.085, colorate=[("3x3 minimum", "r")])

def plotFIMax(data=dataMax):

    plotFeatureImportance(data, "RandConv with original image (feature 0) and custom filters\n3x3 maximum pooling", None, lim=0.085, colorate=[("3x3 maximum", "g")])

def plotFIavg357(data=dataAvg357):

    plotFeatureImportance(data, "RandConv with original image (feature 0) and custom filters\n3x3, 5x5, 7x7 average pooling", None, lim=0.025, colorate=[("3x3 average", "b"), ("5x5 average", "c"), ("7x7 average", "#F69E1B")])

def plotFImMa(data=datanmaM):

    plotFeatureImportance(data, "RandConv with original image (feature 0) and custom filters\n3x3 minimum, average and maximum pooling", None, lim=0.025, colorate=[("no pooling", "m"), ("3x3 average", "b"), ("3x3 minimum", "r"), ("3x3 maximum", "g")])

def plotFImax357(data=dataMax357):

    plotFeatureImportance(data, "RandConv with original image (feature 0) and custom filters\n3x3, 5x5, 7x7 maximum pooling", None, lim=0.025, colorate=[("3x3 maximum", "g"), ("5x5 maximum", "y"), ("7x7 maximum", "#F90FC6")])


if __name__ == "__main__":
    matrix = np.vstack([dataNo, dataMin, dataAvg, dataMax])
    corrMat = np.corrcoef(matrix)
    print "Correlation matrix - no pooling, avg, min, max"
    print corrMat

    everyFirst = [x for x in xrange(4*39) if x%4 == 0]
    everySecond = [x for x in xrange(4*39) if x%4 == 1]
    everyThird= [x for x in xrange(4*39) if x%4 == 2]
    everyFourth= [x for x in xrange(4*39) if x%4 == 3]

    dataSev = np.array(datanmaM)

    print "Correlation no pooling - no pooling in several"
    print np.corrcoef(np.vstack([dataSev[everyFirst], dataNo]))
    print "Correlation avg - avg in several"
    print np.corrcoef(np.vstack([dataSev[everySecond], dataAvg]))
    print "Correlation min - min in several"
    print np.corrcoef(np.vstack([dataSev[everyThird], dataMin]))
    print "Correlation max - max in several"
    print np.corrcoef(np.vstack([dataSev[everyFourth], dataMax]))

    pl.figure()
    pl.xlabel("features")
    pl.ylabel("Cumulative importance")
    pl.plot(getCumulFreq(dataNo), ".m")
    pl.plot(getCumulFreq(dataAvg), "--b")
    pl.plot(getCumulFreq(dataMin), "*g")
    pl.plot(getCumulFreq(dataMax), "-r")
    pl.ylim(0, 1.)
    pl.xlim(0, 39)
    legend = ["No pooling (acc. : 0.4816)"]
    legend += ["3x3 avgerage (acc. : 0.5057)"]
    legend += ["3x3 minumum (acc. : 0.5151)"]
    legend += ["3x3 maxumum (acc. : 0.5476)"]
    pl.legend(legend, loc=4)
    pl.title("Cumulative importance histogram")