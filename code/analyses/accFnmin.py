# -*- coding: utf-8 -*-
"""
Created on Sun May 18 14:40:09 2014

@author: Jm Begon
"""
import pylab as pl
import numpy as np

from util import plotFeatureImportance


def plotAcc():
    sizes = [50, 100, 277, 350, 500]

    legend = ["rci : moving window"]
    data = [0.4969, 0.5057, 0.5151, 0.5122, 0.5223]
    pl.figure()
    pl.xticks(sizes, sizes, rotation=-45)
    pl.xlabel("k (size of the local random subset)")
    pl.xlim(0, 600)
    pl.yticks(pl.arange(0.45, 0.55, 0.01))
    pl.ylim(0.45, 0.55)
    pl.ylabel("Accuracy")
    pl.plot(sizes, data, "-o")
    pl.title("Accuracy as a function of size of the local random subset")
    pl.legend(legend, loc=4)
    pl.plot()


def plotFI(data, k):
    plotFeatureImportance(data, "RandConv with original image (feature 0) \nMinimum number of sample to split : "+str(k), None)


if __name__ == "__main__":
    n2 = [ 0.0271098, 0.0189606, 0.0001375, 0.0236002, 0.0107521, 0.0015851, 0.0081692, 0.0190917, 0.0116396, 0.0004176, 0.0011001, 0.0016647, 0.0194823, 0.0087727, 0.0004605, 0.0131183, 0.0000099, 0.0171307, 0.0104943, 0.0217925, 0.0061458, 0.0000000, 0.0103114, 0.0177175, 0.0099031, 0.0028929, 0.0154457, 0.0271596, 0.0000196, 0.0104398, 0.0222576, 0.0010369, 0.0170559, 0.0000103, 0.0127365, 0.0085806, 0.0273544, 0.0175444, 0.0000023, 0.0000069, 0.0001545, 0.0000285, 0.0000121, 0.0205825, 0.0146406, 0.0282398, 0.0054543, 0.0161403, 0.0038054, 0.0165724, 0.0247801, 0.0113244, 0.0164987, 0.0025082, 0.0000017, 0.0076390, 0.0272782, 0.0175415, 0.0113167, 0.0165124, 0.0100562, 0.0218732, 0.0000072, 0.0093629, 0.0014318, 0.0180456, 0.0173523, 0.0000178, 0.0020570, 0.0046616, 0.0025479, 0.0063238, 0.0046936, 0.0011504, 0.0063963, 0.0190344, 0.0018903, 0.0130071, 0.0000473, 0.0219228, 0.0196532, 0.0258176, 0.0218472, 0.0000175, 0.0001266, 0.0026593, 0.0045112, 0.0187227, 0.0156148, 0.0000059, 0.0095575, 0.0214169, 0.0060630, 0.0051031, 0.0010056, 0.0093537, 0.0011318, 0.0013847, 0.0053247, 0.0014987, 0.0041633, ]
    n10 = [ 0.0289567, 0.0177480, 0.0001682, 0.0251831, 0.0109470, 0.0017745, 0.0082076, 0.0184815, 0.0128216, 0.0004726, 0.0012825, 0.0018247, 0.0180689, 0.0086654, 0.0005094, 0.0118821, 0.0000083, 0.0171063, 0.0106801, 0.0256049, 0.0063241, 0.0000000, 0.0103151, 0.0158292, 0.0095554, 0.0030928, 0.0151634, 0.0265278, 0.0000233, 0.0105638, 0.0225914, 0.0011518, 0.0190655, 0.0000108, 0.0137065, 0.0080445, 0.0289288, 0.0161924, 0.0000008, 0.0000086, 0.0001566, 0.0000309, 0.0000158, 0.0203417, 0.0138588, 0.0294036, 0.0052708, 0.0174166, 0.0040804, 0.0169762, 0.0250908, 0.0122678, 0.0149039, 0.0026511, 0.0000038, 0.0082919, 0.0243898, 0.0167094, 0.0115365, 0.0147305, 0.0099864, 0.0242274, 0.0000063, 0.0097901, 0.0015564, 0.0177280, 0.0157019, 0.0000235, 0.0022199, 0.0048332, 0.0027412, 0.0062503, 0.0049174, 0.0012593, 0.0065412, 0.0174414, 0.0020458, 0.0125622, 0.0000517, 0.0208394, 0.0195836, 0.0277330, 0.0211536, 0.0000177, 0.0001341, 0.0028990, 0.0044858, 0.0189375, 0.0144494, 0.0000041, 0.0096987, 0.0189195, 0.0060636, 0.0052258, 0.0010850, 0.0091778, 0.0011862, 0.0014732, 0.0054499, 0.0015289, 0.0044546, ]
    n50 = [ 0.0323251, 0.0148699, 0.0001777, 0.0318540, 0.0105391, 0.0018973, 0.0074346, 0.0159647, 0.0128403, 0.0005529, 0.0016523, 0.0017633, 0.0138275, 0.0077147, 0.0005838, 0.0082631, 0.0000091, 0.0187074, 0.0090771, 0.0267268, 0.0071997, 0.0000003, 0.0109972, 0.0117478, 0.0069374, 0.0029607, 0.0138218, 0.0423455, 0.0000332, 0.0104873, 0.0245353, 0.0011419, 0.0202393, 0.0000148, 0.0139994, 0.0054936, 0.0324795, 0.0139212, 0.0000009, 0.0000096, 0.0002054, 0.0000421, 0.0000192, 0.0202725, 0.0107311, 0.0394021, 0.0041623, 0.0169634, 0.0040765, 0.0180152, 0.0310084, 0.0125521, 0.0115185, 0.0030709, 0.0000069, 0.0086403, 0.0270769, 0.0129662, 0.0118050, 0.0104874, 0.0078903, 0.0248488, 0.0000090, 0.0100370, 0.0015413, 0.0155802, 0.0111724, 0.0000265, 0.0021896, 0.0040209, 0.0032312, 0.0061379, 0.0048697, 0.0012850, 0.0052204, 0.0161936, 0.0018610, 0.0119786, 0.0000661, 0.0191373, 0.0181510, 0.0333416, 0.0258540, 0.0000276, 0.0001559, 0.0028407, 0.0043455, 0.0177405, 0.0146016, 0.0000103, 0.0086440, 0.0179014, 0.0054510, 0.0041317, 0.0011575, 0.0073424, 0.0011587, 0.0012326, 0.0049081, 0.0014241, 0.0041136, ]
    n500 = [ 0.0552240, 0.0099291, 0.0000412, 0.0571899, 0.0060755, 0.0005449, 0.0042537, 0.0109702, 0.0110284, 0.0000979, 0.0007574, 0.0003081, 0.0082611, 0.0044084, 0.0000242, 0.0024510, 0.0000000, 0.0195319, 0.0042655, 0.0441181, 0.0038625, 0.0000000, 0.0078479, 0.0054862, 0.0014134, 0.0006873, 0.0140210, 0.0479959, 0.0000068, 0.0087670, 0.0266740, 0.0001130, 0.0244980, 0.0000102, 0.0114857, 0.0006838, 0.0382221, 0.0093541, 0.0000000, 0.0000019, 0.0000351, 0.0000085, 0.0000000, 0.0164964, 0.0055984, 0.0675162, 0.0006300, 0.0168971, 0.0014413, 0.0237679, 0.0419212, 0.0082539, 0.0068096, 0.0010325, 0.0000036, 0.0083774, 0.0288821, 0.0081411, 0.0090708, 0.0038458, 0.0030926, 0.0381760, 0.0000000, 0.0071493, 0.0002282, 0.0146101, 0.0059415, 0.0000064, 0.0004952, 0.0006238, 0.0011613, 0.0024956, 0.0021739, 0.0001578, 0.0009372, 0.0178714, 0.0003896, 0.0131352, 0.0000218, 0.0168647, 0.0164266, 0.0549420, 0.0337205, 0.0000068, 0.0000424, 0.0004052, 0.0016854, 0.0318896, 0.0142488, 0.0000066, 0.0042291, 0.0185837, 0.0016131, 0.0007769, 0.0001711, 0.0032286, 0.0001525, 0.0002381, 0.0014261, 0.0001965, 0.0011383, ]
    #Different trees but still : augmentation of the original image importance --> filter plays a lot near the depth


    matrix = np.vstack([n2, n10, n50, n500])
    corrMat = np.corrcoef(matrix)
    print corrMat
