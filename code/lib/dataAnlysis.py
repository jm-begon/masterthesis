# -*- coding: utf-8 -*-
"""
Created on Sat Mar 29 17:24:36 2014

@author: Jm Begon
"""
import numpy as np
import pylab as pl


def plotFunctionSize():
    sizes = [100, 500, 1000, 5000, 10000, 50000]
    sizeLabels = ["100-100", "500-500", "1000-1000", "5000-5000",
                  "10000-10000", "50000-50000"]
    pixit = [0.13, 0.312, 0.359, 0.4272, 0.4398, 0.4977]
    randConv = [0.1, 0.152, 0.185, 0.1954, 0.2085, None]
    randConvImg = [0.12, 0.188, 0.197, 0.2334, 0.2378, 0.2743]
    legend = ["randConv (rc)", "randConv with original image (rci)",
              "pixit (px)"]
    data = np.array([randConv, randConvImg, pixit])
    pl.figure()
    pl.xscale("log")
    pl.xticks(sizes, sizeLabels, rotation=-20)
    pl.xlabel("Data sizes (learnset size-testset size)")
    pl.xlim(50, 60000)
    pl.yticks(pl.arange(0, 0.6, 0.05))
    pl.ylim(0, 0.6)
    pl.ylabel("Accuracy")
    pl.plot(sizes, data.transpose(), "-o")
    pl.legend(legend)
    pl.title("Accuracy of the different methods as a function of the data sizes")
    pl.plot()


def plotVarBox():
    v100_500=[0.16, 0.176, 0.132, 0.166, 0.164, 0.16, 0.162, 0.148, 0.186, 0.148, 0.186, 0.166, 0.144, 0.148, 0.18, 0.154, 0.16, 0.176, 0.172, 0.16, 0.182, 0.158, 0.172, 0.166, 0.162, 0.152, 0.158, 0.156, 0.184, 0.166, 0.132, 0.15, 0.144, 0.152, 0.19, 0.17, 0.17, 0.156, 0.188, 0.132, 0.14, 0.174, 0.172, 0.192, 0.142, 0.168, 0.156, 0.176, 0.156, 0.138]
    v1000_500= [0.158, 0.16, 0.196, 0.15, 0.164, 0.202, 0.152, 0.166, 0.166, 0.186, 0.192, 0.16, 0.166, 0.156, 0.14, 0.216, 0.19, 0.182, 0.19, 0.146, 0.152, 0.162, 0.188, 0.17, 0.192, 0.164, 0.17, 0.19, 0.204, 0.188, 0.178, 0.164, 0.19, 0.184, 0.206, 0.188, 0.142, 0.164, 0.172, 0.164, 0.18, 0.178, 0.186, 0.196, 0.168, 0.174, 0.188, 0.194, 0.156, 0.178]
    v101_500 = [0.214, 0.216, 0.194, 0.226, 0.208, 0.184, 0.204, 0.178, 0.19, 0.176, 0.224, 0.222, 0.202, 0.196, 0.228, 0.188, 0.194, 0.204, 0.184, 0.214, 0.19, 0.22, 0.184, 0.198, 0.188, 0.178, 0.172, 0.184, 0.174, 0.172, 0.224, 0.144, 0.18, 0.168, 0.216, 0.176, 0.192, 0.19, 0.192, 0.216, 0.198, 0.19, 0.19, 0.218, 0.182, 0.21, 0.178, 0.198, 0.192, 0.2]
    v1001_500 = [0.196, 0.178, 0.18, 0.194, 0.17, 0.188, 0.194, 0.212, 0.188, 0.166, 0.18, 0.16, 0.176, 0.162, 0.188, 0.178, 0.176, 0.178, 0.18, 0.204, 0.184, 0.162, 0.154, 0.204, 0.17, 0.2, 0.176, 0.194, 0.184, 0.186, 0.178, 0.168, 0.204, 0.194, 0.166, 0.164, 0.184, 0.19, 0.188, 0.168, 0.196, 0.176, 0.204, 0.184, 0.192, 0.154, 0.204, 0.202, 0.156, 0.196, 0.182, 0.184, 0.206, 0.18, 0.202, 0.178, 0.176, 0.196, 0.182, 0.182, 0.18, 0.17, 0.174, 0.202, 0.182, 0.162, 0.2, 0.174, 0.186, 0.21, 0.174, 0.178, 0.21, 0.15, 0.172, 0.204, 0.212, 0.186, 0.188, 0.166, 0.17, 0.186, 0.194, 0.174, 0.168, 0.206, 0.182, 0.174, 0.186, 0.178, 0.18, 0.2, 0.18, 0.192, 0.194, 0.188, 0.154, 0.226, 0.168, 0.192]
    pixit_500 = [0.32, 0.33, 0.29, 0.304, 0.308, 0.318, 0.304, 0.316, 0.318, 0.32, 0.318, 0.304, 0.314, 0.33, 0.302, 0.308, 0.318, 0.312, 0.322, 0.318, 0.31, 0.294, 0.318, 0.312, 0.316, 0.316, 0.322, 0.312, 0.314, 0.356, 0.31, 0.32, 0.32, 0.33, 0.316, 0.314, 0.31, 0.312, 0.332, 0.302, 0.32, 0.298, 0.302, 0.326, 0.332, 0.324, 0.304, 0.29, 0.338, 0.314]
    data = [v100_500, v1000_500, v101_500, v1001_500, pixit_500]
    names = ["rc 100 filtres", "rc 1000 filtres", "rci 100 filtres",
             "rci 1000 filtres", "pixit"]
    pl.figure()
    pl.title("Accuracy variability\n(500 learning images, 500 testing images)")
    pl.xlabel("Test case")
    pl.ylabel("Accuracy")
    pl.xticks(pl.arange(len(names)), names, rotation=-15)
    pl.boxplot(data)

    stats = []
    for datum in data:
        maxVal = np.max(datum)
        minVal = np.min(datum)
        meanVal = np.mean(datum)
        stdev = np.std(datum)
        stats.append((minVal, meanVal, maxVal, stdev))

    return stats
