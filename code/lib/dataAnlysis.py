# -*- coding: utf-8 -*-
"""
Created on Sat Mar 29 17:24:36 2014

@author: Jm Begon
"""
import numpy as np
import pylab as pl


def plotAccSize():
    sizes = [100, 500, 1000, 5000, 10000, 50000]
    sizeLabels = ["100-100", "500-500", "1000-1000", "5000-5000",
                  "10000-10000", "50000-10000"]
    pixit = [0.13, 0.312, 0.359, 0.4272, 0.4398, 0.4977]
    randConv = [0.1, 0.152, 0.185, 0.1954, 0.2085, 0.2286]
    randConvImg = [0.12, 0.188, 0.197, 0.2334, 0.2378, 0.2659]
    legend = ["randConv (rc)", "randConv with original image (rci)",
              "pixit (px)"]
    data = np.array([randConv, randConvImg, pixit])
    pl.figure()
    pl.xscale("log")
    pl.xticks(sizes, sizeLabels, rotation=-20)
    pl.xlabel("Data sizes (learnset size-testset size)")
    pl.xlim(50, 60000)
    pl.yticks(pl.arange(0, 0.6, 0.05))
    pl.ylim(0, 0.6)
    pl.ylabel("Accuracy")
    pl.plot(sizes, data.transpose(), "-o")
    pl.legend(legend)
    pl.title("Accuracy of the different methods as a function of the data sizes")
    pl.plot()


def plotAccTrees():
    nbTree = [10, 30, 60, 120, 500]
    acc = [0.2345, 0.2659, 0.2873, 0.3056, 0.3157]
    pl.figure()
    pl.xticks(nbTree, nbTree, rotation=-20)
    pl.xlabel("Number of trees")
    pl.xlim(0, 550)
    pl.ylim(0, 0.6)
    pl.yticks(pl.arange(0, 0.6, 0.05))
    pl.ylabel("Accuracy")
    pl.plot(nbTree, acc, "g-o")
    pl.title("RandConv Accuracy (with original image)\nas a function of the number of trees (same filters)")
    pl.annotate(str(acc[0]), xy=(nbTree[0], acc[0]-0.02))
    pl.annotate(str(acc[1]), xy=(nbTree[1], acc[1]-0.02))
    pl.annotate(str(acc[2]), xy=(nbTree[2], acc[2]+0.02))
    pl.annotate(str(acc[3]), xy=(nbTree[3], acc[3]-0.02))
    pl.annotate(str(acc[4]), xy=(nbTree[4], acc[4]-0.02))

    pl.plot()


def plotAccNodalFeatures():
    nodalFeatures = [100, 279, 500, 1000, 5000]
    acc = [0.2507, 0.2659, 0.2827, 0.2911, 0.3232]
    pl.figure()
    pl.xticks(nodalFeatures, nodalFeatures, rotation=-75)
    pl.xlabel("Number of nodal examined features")
    pl.xlim(0, 5100)
    pl.ylim(0, 0.6)
    pl.yticks(pl.arange(0, 0.6, 0.05))
    pl.ylabel("Accuracy")
    pl.plot(nodalFeatures, acc, "g-o")
    pl.title("RandConv Accuracy (with original image)\nas a function of the number of nodal examined features (same filters)")
    pl.annotate(str(acc[0]), xy=(nodalFeatures[0], acc[0]-0.02))
    pl.annotate(str(acc[1]), xy=(nodalFeatures[1], acc[1]-0.02))
    pl.annotate(str(acc[2]), xy=(nodalFeatures[2], acc[2]+0.01))
    pl.annotate(str(acc[3]), xy=(nodalFeatures[3], acc[3]-0.02))
    pl.annotate(str(acc[4]), xy=(nodalFeatures[4], acc[4]-0.02))
    pl.plot()


def plotVarBox():
    v100_500=[0.16, 0.176, 0.132, 0.166, 0.164, 0.16, 0.162, 0.148, 0.186, 0.148, 0.186, 0.166, 0.144, 0.148, 0.18, 0.154, 0.16, 0.176, 0.172, 0.16, 0.182, 0.158, 0.172, 0.166, 0.162, 0.152, 0.158, 0.156, 0.184, 0.166, 0.132, 0.15, 0.144, 0.152, 0.19, 0.17, 0.17, 0.156, 0.188, 0.132, 0.14, 0.174, 0.172, 0.192, 0.142, 0.168, 0.156, 0.176, 0.156, 0.138]
    v1000_500= [0.158, 0.16, 0.196, 0.15, 0.164, 0.202, 0.152, 0.166, 0.166, 0.186, 0.192, 0.16, 0.166, 0.156, 0.14, 0.216, 0.19, 0.182, 0.19, 0.146, 0.152, 0.162, 0.188, 0.17, 0.192, 0.164, 0.17, 0.19, 0.204, 0.188, 0.178, 0.164, 0.19, 0.184, 0.206, 0.188, 0.142, 0.164, 0.172, 0.164, 0.18, 0.178, 0.186, 0.196, 0.168, 0.174, 0.188, 0.194, 0.156, 0.178]
    v101_500 = [0.214, 0.216, 0.194, 0.226, 0.208, 0.184, 0.204, 0.178, 0.19, 0.176, 0.224, 0.222, 0.202, 0.196, 0.228, 0.188, 0.194, 0.204, 0.184, 0.214, 0.19, 0.22, 0.184, 0.198, 0.188, 0.178, 0.172, 0.184, 0.174, 0.172, 0.224, 0.144, 0.18, 0.168, 0.216, 0.176, 0.192, 0.19, 0.192, 0.216, 0.198, 0.19, 0.19, 0.218, 0.182, 0.21, 0.178, 0.198, 0.192, 0.2]
    v1001_500 = [0.196, 0.178, 0.18, 0.194, 0.17, 0.188, 0.194, 0.212, 0.188, 0.166, 0.18, 0.16, 0.176, 0.162, 0.188, 0.178, 0.176, 0.178, 0.18, 0.204, 0.184, 0.162, 0.154, 0.204, 0.17, 0.2, 0.176, 0.194, 0.184, 0.186, 0.178, 0.168, 0.204, 0.194, 0.166, 0.164, 0.184, 0.19, 0.188, 0.168, 0.196, 0.176, 0.204, 0.184, 0.192, 0.154, 0.204, 0.202, 0.156, 0.196, 0.182, 0.184, 0.206, 0.18, 0.202, 0.178, 0.176, 0.196, 0.182, 0.182, 0.18, 0.17, 0.174, 0.202, 0.182, 0.162, 0.2, 0.174, 0.186, 0.21, 0.174, 0.178, 0.21, 0.15, 0.172, 0.204, 0.212, 0.186, 0.188, 0.166, 0.17, 0.186, 0.194, 0.174, 0.168, 0.206, 0.182, 0.174, 0.186, 0.178, 0.18, 0.2, 0.18, 0.192, 0.194, 0.188, 0.154, 0.226, 0.168, 0.192]
    pixit_500 = [0.32, 0.33, 0.29, 0.304, 0.308, 0.318, 0.304, 0.316, 0.318, 0.32, 0.318, 0.304, 0.314, 0.33, 0.302, 0.308, 0.318, 0.312, 0.322, 0.318, 0.31, 0.294, 0.318, 0.312, 0.316, 0.316, 0.322, 0.312, 0.314, 0.356, 0.31, 0.32, 0.32, 0.33, 0.316, 0.314, 0.31, 0.312, 0.332, 0.302, 0.32, 0.298, 0.302, 0.326, 0.332, 0.324, 0.304, 0.29, 0.338, 0.314]
    data = [v100_500, v1000_500, v101_500, v1001_500, pixit_500]
    names = ["rc 100 filtres", "rc 1000 filtres", "rci 100 filtres",
             "rci 1000 filtres", "pixit"]
    pl.figure()
    pl.title("Accuracy variability\n(500 learning images, 500 testing images)")
    pl.xlabel("Test case")
    pl.ylabel("Accuracy")
    pl.xticks(pl.arange(len(names)), names, rotation=-15)
    pl.yticks(pl.arange(0, 0.6, 0.05))
    pl.ylim(.1, .55)
    pl.boxplot(data)

    stats = []
    for datum in data:
        maxVal = np.max(datum)
        minVal = np.min(datum)
        meanVal = np.mean(datum)
        stdev = np.std(datum)
        stats.append((minVal, meanVal, maxVal, stdev))

    return stats


def plotVarBox_pixmax():
    pixitmax = [0.499, 0.5004, 0.4952, 0.4989, 0.4971, 0.495, 0.4946, 0.4972, 0.4953, 0.4984, 0.4999, 0.4988, 0.5033, 0.4976, 0.4961, 0.4974, 0.5007, 0.4999, 0.5031, 0.4954, 0.5034, 0.4986, 0.4932, 0.4995, 0.499, 0.4965, 0.5012, 0.496, 0.5001, 0.5014, 0.4926, 0.5007, 0.4892, 0.4947, 0.4992, 0.4992, 0.4962, 0.4946, 0.4944, 0.4951, 0.4957, 0.5002, 0.4986, 0.4974, 0.4943, 0.5006, 0.5015, 0.4939, 0.497, 0.4984]
    data = [pixitmax]
    names = ["pixit"]
    pl.figure()
    pl.title("Accuracy variability\n(50000 learning images, 10000 testing images)")
    pl.xlabel("Test case")
    pl.ylabel("Accuracy")
    pl.xticks(pl.arange(len(names)), names, rotation=-15)
    pl.yticks(pl.arange(0, 0.6, 0.05))
    pl.ylim(.1, .55)
    pl.boxplot(data)

    stats = []
    for datum in data:
        maxVal = np.max(datum)
        minVal = np.min(datum)
        meanVal = np.mean(datum)
        stdev = np.std(datum)
        stats.append((minVal, meanVal, maxVal, stdev))

    return stats


def plotVarBox_rc11():
    rc11 = [0.2989, 0.3053, 0.2913, 0.2972, 0.3041, 0.3157, 0.3046, 0.2956, 0.3093, 0.3089]
    data = [rc11]
    names = ["rci 10 filtres"]
    pl.figure()
    pl.title("Accuracy variability\n(50000 learning images, 10000 testing images)")
    pl.xlabel("Test case")
    pl.ylabel("Accuracy")
    pl.xticks(pl.arange(len(names)), names, rotation=-15)
    pl.yticks(pl.arange(0, 0.6, 0.05))
    pl.ylim(.1, .55)
    pl.boxplot(data)

    stats = []
    for datum in data:
        maxVal = np.max(datum)
        minVal = np.min(datum)
        meanVal = np.mean(datum)
        stdev = np.std(datum)
        stats.append((minVal, meanVal, maxVal, stdev))

    return stats



def featureImportanceIndices(size, originalImage):
    if originalImage is not None:
        indices = []
        for i in xrange(size):
            if i == originalImage:
                indices.append(str(i) + " (image)")
            else:
                #indices.append("filter "+str(i))
                indices.append(str(i))
        return indices
    else:
        #return [("filter "+str(x)) for x in xrange(size)]
        return xrange(size)


def plotFeatureImportance(featureImportance, title, originalImage=None, lim=0.06):
    """
    originalImage : the index of the original image. If None, ignore
    """
    indices = featureImportanceIndices(len(featureImportance), originalImage)
    pl.figure()
    pl.title(title)
    pl.bar(range(len(featureImportance)), featureImportance, align="center")
    #pl.xticks(pl.arange(len(indices)), indices, rotation=-90)
    pl.xlim([-1, len(indices)])
    pl.ylabel("Feature importance")
    pl.xlabel("Filter indices")
    pl.ylim(0, lim)
    pl.show()

def plotFeatureRC100_max():
    data = [0.009281581060101695, 0.0164049804098393, 0.009235878115155829, 0.009171029171961878, 0.009337977970387332, 0.009561407441779475, 0.009424099140749244, 0.009202229847397792, 0.009553517836394, 0.009748157383707493, 0.009234892402084785, 0.009372307234014597, 0.009759594973623414, 0.009295247685957488, 0.011386340528606128, 0.009185081283358786, 0.009149245724797328, 0.009311741848676836, 0.009391356833854968, 0.014218743510801816, 0.009313260215299142, 0.013988146770890221, 0.009370037541433032, 0.010602713677310548, 0.010933991066093387, 0.009198403815383909, 0.009584973444269448, 0.011452743743006324, 0.009498711474089105, 0.009319751871213248, 0.009325576338217073, 0.009587403526169928, 0.00942681964026731, 0.00923683393427642, 0.009226902556176461, 0.009366237796446528, 0.00935715051050406, 0.009164609486928967, 0.009920739673654382, 0.009232741574020582, 0.009208754423471603, 0.00915180734527177, 0.009342785646974616, 0.00933118097051514, 0.009227437981695702, 0.009246432337733286, 0.00930513904423228, 0.009225264509083628, 0.00932423544834642, 0.009164326467244369, 0.009139813075509987, 0.011518132822934572, 0.009450179120176653, 0.009341748730297104, 0.009210078650306585, 0.018485910463464254, 0.00969117910573273, 0.01247805117549306, 0.009166778350175047, 0.009470129258620218, 0.009161365900624784, 0.009243703780552504, 0.009293739343056405, 0.010033240997506219, 0.009307286695493999, 0.009337944282456363, 0.00947995213821122, 0.01743997387286783, 0.009254506356018204, 0.009313961750741284, 0.009243840133638671, 0.009444401268824778, 0.009516474030489159, 0.009300252286391827, 0.009184132512435106, 0.009219850729643524, 0.009431177034088871, 0.01420576790707685, 0.009231706607145113, 0.009570202091782234, 0.009429234371895447, 0.016766376891771247, 0.009211867395381271, 0.009374526781404225, 0.009293361066957528, 0.00930854013355776, 0.009368880016983399, 0.00921351291560905, 0.009325312522356537, 0.01129323149403471, 0.009417433318873203, 0.013634219800214007, 0.009377866677414394, 0.009126311166434059, 0.010004965366017301, 0.00925314112313433, 0.00936386728097645, 0.00929274485154509, 0.009815201978140725, 0.00910340114215896]
    plotFeatureImportance(data, "RandConv without original image\n100 filters, 30 trees, 277 inspected features", None)


def plotFeatureRC101_max():
    data = [0.052149769480702, 0.008942310870118488, 0.014504591864433305, 0.009007606421773172, 0.00897237341779483, 0.008898867775454334, 0.009142387636343166, 0.009170497899046396, 0.008901136796135868, 0.009138660980641889, 0.009291020117762151, 0.00905553692406449, 0.00887894750185501, 0.009559921836185507, 0.009055861882654325, 0.010772802975098483, 0.008957241372504542, 0.008798263133649169, 0.008950184629300535, 0.00897519463722679, 0.012731638449947262, 0.008901070456142315, 0.012514603126161972, 0.008922662397390037, 0.010537200801734191, 0.01063949410204306, 0.008890163374519755, 0.009219485574413738, 0.011004207765851539, 0.00933092242361335, 0.008855158060886659, 0.008879986327615611, 0.00919108015702744, 0.009021027611294606, 0.008881059790951726, 0.008915762177402472, 0.009013491220568487, 0.009027745957176102, 0.008931202948926239, 0.0094566678539281, 0.008965085767772371, 0.008912392500048714, 0.008714394423672488, 0.008918768642723694, 0.009066312732187283, 0.008777391764571508, 0.008988155972018902, 0.008951887337760148, 0.009057610573022318, 0.008891698066149697, 0.008921588338824366, 0.008886880520919807, 0.011246946403864179, 0.009065406881566387, 0.008797443020808562, 0.008985644119384496, 0.01460451793582839, 0.00931184275885776, 0.010758087682897346, 0.008901155376853931, 0.009026300895419828, 0.00888591227298478, 0.008958278735102253, 0.009070678904350092, 0.009553124531621722, 0.009080357641926334, 0.008932379124285267, 0.009053869514780545, 0.014338375741407896, 0.008854503850214624, 0.008961624987946717, 0.008948291582922823, 0.009060159310450263, 0.009178950146988208, 0.00890100759888235, 0.008878986285285224, 0.009001211823250537, 0.00898657163481876, 0.012249836782292231, 0.008918898150728584, 0.009202080125822801, 0.008850983017753732, 0.013062950701974944, 0.008980422535635198, 0.009014367417098249, 0.008940967974462451, 0.008933665573325394, 0.008983236228231582, 0.008950298205809169, 0.008866678061449342, 0.010353267161822994, 0.009024330854817015, 0.012149345324574914, 0.009085620178472142, 0.009120947328960885, 0.009622549016547854, 0.008899901890346312, 0.009047701479648583, 0.008963986326650858, 0.009581065554741891, 0.008815295976207452]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 30 trees, 278 inspected features", 0)


def plotFeatureRC101_max_t10():
    data = [0.052142394597557366, 0.009130827809772445, 0.013083682190274611, 0.008804263684013113, 0.008946821872337975, 0.009099806429718598, 0.008992348709304794, 0.009259214834775186, 0.008869072176246254, 0.009279830201864528, 0.009240391057224847, 0.008847072532187842, 0.00912425338735343, 0.009571626233421582, 0.008951630517137515, 0.011060450781174397, 0.008875845360043365, 0.008757188606369, 0.009038549801694874, 0.009176511873905994, 0.012920838595135844, 0.00897672920790838, 0.01181880998615836, 0.008933946561835642, 0.010747324425376509, 0.010337686388443635, 0.009001779327061862, 0.009357266531596471, 0.010650209730245571, 0.00928629470436222, 0.008983252759120609, 0.008775548212499866, 0.008947274957044666, 0.009253860145941687, 0.008959964331670437, 0.008872947770465751, 0.00910773274220163, 0.008995994648948931, 0.00904874848802592, 0.009472617604408233, 0.008911667160467892, 0.008948852190863162, 0.00875493391250018, 0.008852057620347199, 0.009189813416075287, 0.00897143578861484, 0.0088784863426493, 0.008924646366523547, 0.009052219716186522, 0.008979969540502264, 0.008978409365219212, 0.00870064997736122, 0.011883122167237204, 0.008981915999124526, 0.00883408685352188, 0.009064149906484234, 0.014364291243465343, 0.00928162748998287, 0.01087878115075257, 0.00879215402149569, 0.009059543288970755, 0.00873726017179482, 0.00908934142213604, 0.00896906746308547, 0.009621082041154989, 0.00904331728944678, 0.009124258657698718, 0.009153786160650755, 0.014720441794118178, 0.009177411601533833, 0.008939971429233818, 0.008840607594382077, 0.008998380978639631, 0.00924118376483608, 0.009122742674921965, 0.008875491835329225, 0.008649279733451367, 0.009030185875936335, 0.012749167070307077, 0.008655811547229693, 0.009310760053082071, 0.009030569800077132, 0.01300525325000818, 0.009011607631593938, 0.008940343203071258, 0.009011293362525714, 0.009028136219730774, 0.008843272516866386, 0.008965020367122175, 0.008890066218196206, 0.010345522482423356, 0.008973340831188779, 0.012169190644472049, 0.008951132358591934, 0.008868721206822888, 0.009477462726904522, 0.009132336543645194, 0.008804645510692091, 0.008962935963998638, 0.009532273489416572, 0.009023903220590069]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 10 trees, 278 inspected features", 0)


def plotFeatureRC101_max_t60():
    data = [0.051190192357037166, 0.008992161170909636, 0.014276111751345813, 0.008986304913385961, 0.00899071772350921, 0.008930854227894714, 0.009128559660871524, 0.00918159896088113, 0.008877852207190538, 0.00910547747928947, 0.009339609461720036, 0.008987721425224157, 0.008941072003587139, 0.009337648573227187, 0.008923972165594603, 0.010478334735563095, 0.008883829824997094, 0.008869632375869836, 0.008931278603130215, 0.008872266260991388, 0.012999687536559874, 0.008940634222768936, 0.012183002449078903, 0.00899408295071821, 0.010647538193874343, 0.010479461372479225, 0.008958164561662428, 0.00916038093285728, 0.010856100028239977, 0.009163116964242213, 0.008955532259978215, 0.009014209274225525, 0.009208094963866957, 0.008914066361177746, 0.00894476994464989, 0.008837865683126056, 0.009021980163885399, 0.008956731633051478, 0.009086079239461326, 0.009573617394478698, 0.008937669743638587, 0.008901133461380738, 0.008974066700408102, 0.008946819862449462, 0.008998794892212683, 0.008890831319558166, 0.009001215954875245, 0.008933808733311198, 0.008852858494060138, 0.008974366293395689, 0.008974091398346843, 0.008959629140855855, 0.01142319643254203, 0.009014367912970172, 0.00895956067686934, 0.00898426013694098, 0.015516860307500427, 0.009313592099766748, 0.011125614810841447, 0.008922764682030836, 0.008928358272842494, 0.008864075966567008, 0.008889923691335686, 0.008870800400923959, 0.009681141246593491, 0.00902096656977024, 0.008895308149084553, 0.009041920628363122, 0.014557281432760805, 0.008913421010619085, 0.00901403001433462, 0.009005211624144485, 0.009002765469751692, 0.009175417710250591, 0.008906506907310433, 0.009019606617861222, 0.008917428092618621, 0.009052911869017893, 0.012070023863856895, 0.0090028846946455, 0.009193315326904539, 0.008927515331131475, 0.01316293772593233, 0.008896584295642487, 0.008928014571937653, 0.0089392612055808, 0.008958475986573346, 0.008924649063627223, 0.008951624846166758, 0.008937586891860874, 0.010637245780949371, 0.009013293251174656, 0.012061701401158566, 0.008912136241539989, 0.008898553408523635, 0.009745650809740906, 0.008972363527885704, 0.008972006411621086, 0.008859710502921595, 0.009578908683369629, 0.008972665436630873]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 60 trees, 278 inspected features", 0)


def plotFeatureRC101_max_t120():
    data = [0.05155698813284357, 0.008958885987082475, 0.01441462020036928, 0.008920876131589177, 0.008993816231119917, 0.008954158309516572, 0.00913116022860396, 0.009144844804548165, 0.008937134807749445, 0.009154206867375444, 0.009354381682019148, 0.008947159381350586, 0.008953916714797297, 0.009421125592865103, 0.008955625327857432, 0.010551125163275117, 0.008941837003733067, 0.008935922233327918, 0.008889831831711345, 0.00892153536367422, 0.012835566970610935, 0.008879356977768914, 0.012397734601544164, 0.008922805433255951, 0.010594320242838483, 0.010341611838286916, 0.00898412791396236, 0.009192436047974123, 0.010929732687815196, 0.009305612136322522, 0.008920337797663, 0.008967950855483653, 0.009191308218810463, 0.008957090582311152, 0.00895807973512729, 0.00891967967627112, 0.008927057272994329, 0.008881743054247965, 0.00902317862136379, 0.00950063232551006, 0.008944314361920539, 0.008964952099029462, 0.008921957093921394, 0.008874983006096446, 0.008994565610435837, 0.008951689288017844, 0.008908640239557966, 0.008907342203121215, 0.00892384391916697, 0.00891985924439605, 0.008913659585073678, 0.008907378732439465, 0.011507984764546333, 0.009003604510712858, 0.008967252949789763, 0.008959212898464516, 0.015000854547114539, 0.00930810667265032, 0.011115491314998387, 0.008902221297506018, 0.008905687435734257, 0.008966294325966809, 0.008958732977943874, 0.008955325830268786, 0.009620179157581357, 0.009003967394917682, 0.008942605774570117, 0.009042317232688946, 0.014426272711449743, 0.008941680167990728, 0.008938256932896209, 0.008920078857306425, 0.009088894712531874, 0.009233374004009441, 0.008974488791441361, 0.00894955994643715, 0.008964309469174231, 0.0089968680736191, 0.01189815667030262, 0.008876830296186211, 0.009175224778884853, 0.008955402862915136, 0.013489840740148374, 0.008906086116135544, 0.009003788752371133, 0.008966343842936937, 0.00897318782157571, 0.008974283112197893, 0.008941615005367822, 0.008851586268358965, 0.010487037241739198, 0.009027595866943834, 0.012397265367627057, 0.008907902877664551, 0.00890665457800428, 0.00974533335744195, 0.008885378668839455, 0.00891439417759155, 0.008927180868100498, 0.009454804598455444, 0.008937783009234954]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 120 trees, 278 inspected features", 0)


def plotFeatureRC101_max_t500():
    data = [0.051560383186295966, 0.008931226489881806, 0.014246737531587138, 0.008950477257908256, 0.008987362939838383, 0.008976662881481778, 0.009065362419126288, 0.009175136941694252, 0.008922553657665522, 0.009203364582894929, 0.0093458226526057, 0.008934131542105482, 0.00892773053222452, 0.009349150476610169, 0.008957762098226149, 0.010520422268037758, 0.008933881693169143, 0.008926454900740394, 0.008949555127731337, 0.008914425937286186, 0.012887872075327116, 0.008898285182996554, 0.01235423830083973, 0.008967124907299596, 0.010603340151335055, 0.010408019000532892, 0.008919798032098348, 0.009227989437055764, 0.010819553093171685, 0.009252277031892601, 0.00899093457060613, 0.008917575320104761, 0.00923882018455606, 0.008941412566025946, 0.008974888051389431, 0.008940374944509992, 0.008941846496003618, 0.008915476204434407, 0.008911788132854023, 0.009551533556964725, 0.008910089149442278, 0.008935492015746432, 0.008969391170319786, 0.008939510038782017, 0.009053275613586377, 0.008976058517459704, 0.008952699457552074, 0.008939931465914038, 0.00892258224434993, 0.008926444870090151, 0.008939518704831995, 0.008917971977272888, 0.011378182275575311, 0.008990263864578135, 0.008925896315929339, 0.00895661570831872, 0.015124319609473927, 0.009321101204789939, 0.011226368312179442, 0.008947586421614407, 0.008936818774840314, 0.008894488955641593, 0.008937463475418125, 0.00895172993153312, 0.009657018831775195, 0.009008445662888854, 0.008941972572525476, 0.009054679415388747, 0.0141959675268524, 0.008957461336589877, 0.008948087395718477, 0.00895358905911537, 0.009064921103515406, 0.009172098566109654, 0.008969781810965978, 0.008899399663864705, 0.008908716010586988, 0.009016475185219044, 0.012048262081814393, 0.008944811712003915, 0.009194551700132888, 0.00898677701732609, 0.013350735465335382, 0.008935378226998518, 0.009013233196134337, 0.008962769469739807, 0.008930735453240812, 0.009043012591532661, 0.00894107159824574, 0.008908102592648796, 0.0105850570514567, 0.009044166828409297, 0.012210867486527202, 0.00892241127992884, 0.008940134222123256, 0.009674074899400486, 0.0089428815324407, 0.008934865109915669, 0.008954594663065078, 0.009463358048034236, 0.008903981200161648]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 500 trees, 278 inspected features", 0)


def plotFeatureRC101_max_f100():
    data = [0.03946114914219775, 0.009116554358364823, 0.013951068003931637, 0.009116648289858949, 0.009150769186331327, 0.009175652409319847, 0.009300851809373355, 0.009353893462604975, 0.009027251332859098, 0.00944613022497521, 0.009616029216126315, 0.00917744120280759, 0.00905798825115535, 0.009462363996706196, 0.009035288238030056, 0.010738202983982231, 0.009127923922898792, 0.009090003254052426, 0.009044955090288005, 0.008947525266765687, 0.013020178593678721, 0.00907918741493407, 0.012213857794394427, 0.009163061658643005, 0.01044078196916449, 0.01044582085229472, 0.009030167640697926, 0.009300351822787555, 0.010870793938847713, 0.009536807856918123, 0.009119469673981964, 0.008969794404196147, 0.009324814606419854, 0.009069144156477922, 0.009196336370988524, 0.00897454261043492, 0.009202745916849164, 0.009143912806109688, 0.009179142413392948, 0.009586564887249896, 0.009107222438454462, 0.009116943644197401, 0.009077529874736983, 0.00911770340701231, 0.009165140234326342, 0.009090872544147087, 0.009060196666390387, 0.009050348897963417, 0.009113669058507566, 0.009136672117246175, 0.009166232954555348, 0.009077740255452629, 0.011158292270744158, 0.009244409164536647, 0.009130613435673996, 0.009168479844621057, 0.014310114126752906, 0.009527691481318297, 0.01127301270596129, 0.009108409385268468, 0.009069610569666448, 0.009126812597716367, 0.009039918417208335, 0.009121222168943788, 0.009940875707566884, 0.009261794793393271, 0.009023441695943829, 0.009315823825099627, 0.013212812026496535, 0.009102223511293707, 0.009107060897365482, 0.009043899294683876, 0.009161544952768512, 0.00921003623894995, 0.009173473535976804, 0.00912408045037992, 0.009148338793442528, 0.009173500902786043, 0.011937526852234077, 0.00909308219989102, 0.009347096403754597, 0.009137934537214395, 0.013132064186320474, 0.009140784939601845, 0.009193328620575366, 0.009133700591701602, 0.009175229884678383, 0.00923267200750981, 0.009206115910963928, 0.00907714913697104, 0.010623984237197603, 0.009319412990554405, 0.012746358516180865, 0.009104165905237795, 0.009016870918053246, 0.009569705574041831, 0.00914891719058712, 0.009180119370681371, 0.009062575642695116, 0.00957180646293326, 0.009026466001857265]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 30 trees, 100 inspected features", 0)

def plotFeatureRC101_max_f500():
    data = [0.060857966997131446, 0.008773677196814685, 0.014151976898350887, 0.008783480072890083, 0.008775018321073361, 0.008734594163083914, 0.009082502577372689, 0.009105151412540482, 0.008765548739445494, 0.009128797200662255, 0.009313967941499003, 0.008721960501517507, 0.008915139620641142, 0.009333248950147111, 0.008777968119603869, 0.010594468986873192, 0.008855608623193227, 0.008796040081307107, 0.008838157070422592, 0.008763310121452577, 0.01316732855848319, 0.008777907756796875, 0.012453173299980216, 0.008842029632922115, 0.010576915699241728, 0.010435479464521464, 0.008817433288668027, 0.009130604083422025, 0.010739843056567238, 0.009120566091776182, 0.008877717417287065, 0.00883901190411733, 0.009051354640946889, 0.009020954532048712, 0.008843477174331434, 0.008838261988927626, 0.008800849305790531, 0.0088063975894439, 0.008979569050865575, 0.009400542836132002, 0.008732277442481734, 0.00885793730379046, 0.008729657079479394, 0.008809153775450053, 0.008977970234004908, 0.008780413317037066, 0.008932640205438078, 0.008844488841338973, 0.008690659462241797, 0.008689334853589767, 0.00888932008419794, 0.008854130884177119, 0.011290693479131364, 0.009070693366165032, 0.008871562506366585, 0.008762559839453295, 0.015115033104691988, 0.009296950863683222, 0.010923126797700891, 0.008883907738279203, 0.008917449604029662, 0.008707328451666172, 0.008901239406010559, 0.00886416210335931, 0.009629264735613942, 0.008972575458240954, 0.00894484768063489, 0.008980194297568111, 0.013587504197060292, 0.008853557163934012, 0.008828357996512359, 0.008813999873039522, 0.008950564239728757, 0.008984085346727762, 0.008833832835410131, 0.00884497302999866, 0.008808762200792642, 0.009033248781676103, 0.012128252681683955, 0.008763455831034049, 0.008986182006127288, 0.008893360935239797, 0.013883460982392334, 0.008826052105198524, 0.009028175484269414, 0.008863800034599727, 0.008805951126301411, 0.00904996174848387, 0.008723241520096374, 0.008852342724555427, 0.010432069665401143, 0.008921871641812509, 0.012053640368861541, 0.008809816620500538, 0.0088376699214586, 0.009633332615935972, 0.008692638940934833, 0.008901706150981044, 0.008738168187257898, 0.009307324861781844, 0.008821064296182984]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 30 trees, 500 inspected features", 0)


def plotFeatureRC101_max_f1000():
    data = [0.07060029767280969, 0.00868456213850627, 0.013762522047048377, 0.00890180905986851, 0.0087987830472016, 0.008831226929582717, 0.008903816949154946, 0.008906618356942758, 0.008780013807686185, 0.009113491951134993, 0.009142571230853868, 0.008701695408135557, 0.00857922406049151, 0.009215798854459029, 0.008836951347258976, 0.010591126881189013, 0.008839802259299643, 0.008690632132598238, 0.008690735109201252, 0.00877360415312163, 0.013310123215503353, 0.008876441724627418, 0.011946737878325136, 0.00868729299518872, 0.010352470480329624, 0.010260925054835321, 0.008837652876834906, 0.008904769441062095, 0.010552869659797555, 0.009097256568774945, 0.008760562766874308, 0.008743178840835395, 0.009149637180710797, 0.008650846851682213, 0.008730397635606759, 0.008679770362194708, 0.008877541169454179, 0.00877432376657378, 0.008677821089812982, 0.009255487073576207, 0.00878001586638734, 0.008716819807278153, 0.008774622251512501, 0.00864105582137705, 0.008833316906543464, 0.008690341274166565, 0.008740075933938296, 0.008905346531660833, 0.008635149513652093, 0.008617571089241348, 0.0087128747046771, 0.008728857378658425, 0.0112898799297632, 0.008730920936790953, 0.008580925657585862, 0.008831599805610093, 0.015650443104313457, 0.009193565111800396, 0.010733901553047504, 0.008605296146884614, 0.008544914418576723, 0.00881290434060783, 0.008668111101878132, 0.00872386405320675, 0.009524065333505971, 0.008817603797339774, 0.008699317780105907, 0.008917777674377493, 0.013743012118118429, 0.008788309130864749, 0.00871527342300616, 0.008739690218742375, 0.008819558121995414, 0.00900786395615082, 0.008911551432979876, 0.008581034540112503, 0.008574175148636823, 0.0087323080590373, 0.011440906157139039, 0.008701770416059134, 0.008907824300974553, 0.0086445822145895, 0.013533336186622157, 0.00871294210590127, 0.008805730776318198, 0.008912826889808278, 0.008816523383881452, 0.008686342009646044, 0.008683033793435945, 0.008606488846432633, 0.010664210084880306, 0.008998851926334643, 0.012163548816761044, 0.00860583158565403, 0.00890520936341751, 0.009676839434980242, 0.008775184578226016, 0.008863539173838418, 0.008602627677543532, 0.009305848990573769, 0.008800697283794278]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 30 trees, 1000 inspected features", 0)


def plotFeatureRC101_max_f5000():
    data = [0.08755757515063171, 0.008581099090972917, 0.013486074348954486, 0.008625739510572989, 0.008632157130426147, 0.008549205198364504, 0.008887958356358434, 0.008977407047713807, 0.008599567458255018, 0.00868574441550831, 0.00874014192647335, 0.008539253471964395, 0.00857666974477446, 0.00900132262452262, 0.008503786419947187, 0.010180207202600197, 0.008607793129474038, 0.008484497280063286, 0.008521080822140696, 0.008608883663961012, 0.013360860489425419, 0.00849679553469251, 0.01186170247366654, 0.008579770628584699, 0.010567112192319135, 0.010249642240396938, 0.008508536173251136, 0.008867149797321046, 0.010594898754397696, 0.008858502327895845, 0.0085519702776032, 0.00845435214402703, 0.008890774022848318, 0.008622598761793243, 0.008494127059861922, 0.008492765690672444, 0.00864540154971946, 0.008423464439840494, 0.008493082060671288, 0.009107328751802191, 0.008590990905404758, 0.008552865005458288, 0.008538524470892327, 0.00838916417145375, 0.008885162513632739, 0.008515554471569058, 0.00860361178192863, 0.008516401126536318, 0.008554452930885054, 0.008595988638922244, 0.00848631252159265, 0.008507677658717882, 0.01125100682453298, 0.00858080118028524, 0.00851957805160277, 0.008492530022471903, 0.015097393721208802, 0.009067220665295686, 0.010521357103654207, 0.008577425082719916, 0.008481123338771508, 0.008591976037917618, 0.00859315087794217, 0.008530235544581096, 0.009262960606239521, 0.008714564699428507, 0.00862724353500203, 0.008841473299313122, 0.01281346664871662, 0.00838713715835322, 0.008557442953894802, 0.008605686947582127, 0.008665809832479726, 0.008843468970457923, 0.008465868640839272, 0.008544726658315887, 0.008635990656462662, 0.008694748688058387, 0.01150974980112628, 0.00852708715830243, 0.008892584562212934, 0.008533104799709403, 0.013639217898906464, 0.00857324497350735, 0.008606327094911359, 0.008595813568452099, 0.008696674502839922, 0.008625181830181936, 0.008408739570130394, 0.00852027719138702, 0.010611765038157946, 0.008620205153627188, 0.01239665462450093, 0.008691948208897618, 0.008460980554890756, 0.00951921401146104, 0.00853980649758044, 0.008636417122476208, 0.008525351392319898, 0.009332500438604464, 0.008369060698318631]
    plotFeatureImportance(data, "RandConv with original image\n100 filters, 30 trees, 5000 inspected features", 0)

def plotRC10():
    featImp = [0.0955500411978225, 0.09423275958183876, 0.13004497777341875, 0.0937866611240207, 0.10360494190347981, 0.09489401607980885, 0.10626132832239629, 0.09420755690126321, 0.09338270191460381, 0.09403501520134695]
    plotFeatureImportance(featImp, "RandConv without original image\n10 filters, 30 trees, 88 inspected features", None)


def plotRC11():
    featImp = [0.18894263899883149, 0.08051070679849695, 0.08026280593317951, 0.08093073353780872, 0.08059468796655718, 0.08052252919588573, 0.08029934571057198, 0.0829080377116332, 0.08238780868052316, 0.08223647455418998, 0.0804042309123219]
    plotFeatureImportance(featImp, "RandConv with original image\n10 filters, 30 trees, 91 inspected features", 0)


def plotRC11_boosted():
    featImp = [0.1483545057470825, 0.090482545507931736, 0.08574519420344158, 0.084343211098311444, 0.087117639629299276, 0.084517352316011693, 0.082633862695659741, 0.084855892276809397, 0.084749158213867068, 0.084428640464276325, 0.082771997847309403]
    plotFeatureImportance(featImp, "Boosted randConv with original image\n10 filters, 30 trees, 91 inspected features", 0, 0.2)


